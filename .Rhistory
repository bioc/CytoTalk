f <- f + 1
if (r < d) {
f <- 0
mat <- rbind(mat, vec)
}
}
mat[, 2] <- -mat[, 2]
plot(mat, pch = 16, cex = 0.5)
img <- imager::load.image("/Users/Shane/OneDrive/Personal/system/profile_formal.jpg")
point <- function(a, b) {
runif(2, a, b)
}
distance <- function(a, b) {
sqrt(sum((a - b)^2))
}
value <- function(img, vec) {
mean(img[
ceiling(vec[1] * dim(img)[1]),
ceiling(vec[2] * dim(img)[2]),
1, 1:3
])
}
a <- 0
b <- 1
r <- 0.1
mat <- t(matrix(point(a, b)))
f <- 0
while (f < 100) {
vec <- point(a, b)
r <- 0.01 + value(img, vec)^1.25 / 10
d <- min(apply(mat, 1, distance, vec))
f <- f + 1
if (r < d) {
f <- 0
mat <- rbind(mat, vec)
}
}
mat[, 2] <- -mat[, 2]
plot(mat, pch = 16, cex = 0.5, asp = ncol(img) / nrow(img))
point <- function(a, b) {
runif(2, a, b)
}
distance <- function(a, b) {
sqrt(sum((a - b)^2))
}
value <- function(img, vec) {
mean(img[
ceiling(vec[1] * dim(img)[1]),
ceiling(vec[2] * dim(img)[2]),
1, 1:3
])
}
a <- 0
b <- 1
r <- 0.1
mat <- t(matrix(point(a, b)))
f <- 0
while (f < 200) {
vec <- point(a, b)
r <- 0.01 + value(img, vec)^1.25 / 10
d <- min(apply(mat, 1, distance, vec))
f <- f + 1
if (r < d) {
f <- 0
mat <- rbind(mat, vec)
}
}
mat[, 2] <- -mat[, 2]
plot(mat, pch = 16, cex = 0.5, asp = ncol(img) / nrow(img))
point <- function(a, b) {
runif(2, a, b)
}
distance <- function(a, b) {
sqrt(sum((a - b)^2))
}
value <- function(img, vec) {
mean(img[
ceiling(vec[1] * dim(img)[1]),
ceiling(vec[2] * dim(img)[2]),
1, 1:3
])
}
a <- 0
b <- 1
r <- 0.1
mat <- t(matrix(point(a, b)))
f <- 0
while (f < 100) {
vec <- point(a, b)
r <- 0.01 + value(img, vec)^1.2 / 10
d <- min(apply(mat, 1, distance, vec))
f <- f + 1
if (r < d) {
f <- 0
mat <- rbind(mat, vec)
}
}
mat[, 2] <- -mat[, 2]
plot(mat, pch = 16, cex = 0.5, asp = ncol(img) / nrow(img))
point <- function(a, b) {
runif(2, a, b)
}
distance <- function(a, b) {
sqrt(sum((a - b)^2))
}
value <- function(img, vec) {
mean(img[
ceiling(vec[1] * dim(img)[1]),
ceiling(vec[2] * dim(img)[2]),
1, 1:3
])
}
a <- 0
b <- 1
r <- 0.1
mat <- t(matrix(point(a, b)))
f <- 0
while (f < 100) {
vec <- point(a, b)
r <- 0.01 + value(img, vec)^1.2 / 15
d <- min(apply(mat, 1, distance, vec))
f <- f + 1
if (r < d) {
f <- 0
mat <- rbind(mat, vec)
}
}
mat[, 2] <- -mat[, 2]
plot(mat, pch = 16, cex = 0.5, asp = ncol(img) / nrow(img))
point <- function(a, b) {
runif(2, a, b)
}
distance <- function(a, b) {
sqrt(sum((a - b)^2))
}
value <- function(img, vec) {
mean(img[
ceiling(vec[1] * dim(img)[1]),
ceiling(vec[2] * dim(img)[2]),
1, 1:3
])
}
a <- 0
b <- 1
r <- 0.1
mat <- t(matrix(point(a, b)))
f <- 0
while (f < 100) {
vec <- point(a, b)
r <- 0.005 + value(img, vec)^1.2 / 15
d <- min(apply(mat, 1, distance, vec))
f <- f + 1
if (r < d) {
f <- 0
mat <- rbind(mat, vec)
}
}
mat[, 2] <- -mat[, 2]
plot(mat, pch = 16, cex = 0.5, asp = ncol(img) / nrow(img))
img <- imager::load.image("/Users/Shane/OneDrive/Personal/system/profile_formal.jpg")
point <- function(a, b) {
runif(2, a, b)
}
distance <- function(a, b) {
sqrt(sum((a - b)^2))
}
value <- function(img, vec) {
mean(img[
ceiling(vec[1] * dim(img)[1]),
ceiling(vec[2] * dim(img)[2]),
1, 1:3
])
}
a <- 0
b <- 1
r <- 0.1
mat <- t(matrix(point(a, b)))
f <- 0
while (f < 100) {
vec <- point(a, b)
r <- 0.009 + value(img, vec)^1.2 / 15
d <- min(apply(mat, 1, distance, vec))
f <- f + 1
if (r < d) {
f <- 0
mat <- rbind(mat, vec)
}
}
mat[, 2] <- -mat[, 2]
plot(mat, pch = 16, cex = 0.5, asp = ncol(img) / nrow(img))
point <- function(a, b) {
runif(2, a, b)
}
distance <- function(a, b) {
sqrt(sum((a - b)^2))
}
value <- function(img, vec) {
mean(img[
ceiling(vec[1] * dim(img)[1]),
ceiling(vec[2] * dim(img)[2]),
1, 1:3
])
}
a <- 0
b <- 1
r <- 0.1
mat <- t(matrix(point(a, b)))
f <- 0
while (f < 100) {
vec <- point(a, b)
r <- 0.008 + value(img, vec)^1.2 / 15
d <- min(apply(mat, 1, distance, vec))
f <- f + 1
if (r < d) {
f <- 0
mat <- rbind(mat, vec)
}
}
mat[, 2] <- -mat[, 2]
plot(mat, pch = 16, cex = 0.5, asp = ncol(img) / nrow(img))
point <- function(a, b) {
runif(2, a, b)
}
distance <- function(a, b) {
sqrt(sum((a - b)^2))
}
value <- function(img, vec) {
mean(img[
ceiling(vec[1] * dim(img)[1]),
ceiling(vec[2] * dim(img)[2]),
1, 1:3
])
}
a <- 0
b <- 1
r <- 0.1
mat <- t(matrix(point(a, b)))
f <- 0
while (f < 100) {
vec <- point(a, b)
r <- 0.007 + value(img, vec)^1.2 / 15
d <- min(apply(mat, 1, distance, vec))
f <- f + 1
if (r < d) {
f <- 0
mat <- rbind(mat, vec)
}
}
mat[, 2] <- -mat[, 2]
plot(mat, pch = 16, cex = 0.5, asp = ncol(img) / nrow(img))
img <- imager::load.image("/Users/Shane/OneDrive/Personal/system/profile_formal.jpg")
point <- function(a, b) {
runif(2, a, b)
}
distance <- function(a, b) {
sqrt(sum((a - b)^2))
}
value <- function(img, vec) {
mean(img[
ceiling(vec[1] * dim(img)[1]),
ceiling(vec[2] * dim(img)[2]),
1, 1:3
])
}
a <- 0
b <- 1
r <- 0.1
mat <- t(matrix(point(a, b)))
f <- 0
while (f < 100) {
vec <- point(a, b)
r <- value(img, vec)^1.2 / 5
d <- min(apply(mat, 1, distance, vec))
f <- f + 1
if (r < d) {
f <- 0
mat <- rbind(mat, vec)
}
}
mat[, 2] <- -mat[, 2]
plot(mat, pch = 16, cex = 0.5, asp = ncol(img) / nrow(img))
point <- function(a, b) {
runif(2, a, b)
}
distance <- function(a, b) {
sqrt(sum((a - b)^2))
}
value <- function(img, vec) {
mean(img[
ceiling(vec[1] * dim(img)[1]),
ceiling(vec[2] * dim(img)[2]),
1, 1:3
])
}
a <- 0
b <- 1
r <- 0.1
mat <- t(matrix(point(a, b)))
f <- 0
while (f < 100) {
vec <- point(a, b)
r <- value(img, vec)^1.2 / 10
d <- min(apply(mat, 1, distance, vec))
f <- f + 1
if (r < d) {
f <- 0
mat <- rbind(mat, vec)
}
}
mat[, 2] <- -mat[, 2]
plot(mat, pch = 16, cex = 0.5, asp = ncol(img) / nrow(img))
point <- function(a, b) {
runif(2, a, b)
}
distance <- function(a, b) {
sqrt(sum((a - b)^2))
}
value <- function(img, vec) {
mean(img[
ceiling(vec[1] * dim(img)[1]),
ceiling(vec[2] * dim(img)[2]),
1, 1:3
])
}
a <- 0
b <- 1
r <- 0.1
mat <- t(matrix(point(a, b)))
f <- 0
while (f < 100) {
vec <- point(a, b)
r <- 0.005 + value(img, vec)^1.2 / 10
d <- min(apply(mat, 1, distance, vec))
f <- f + 1
if (r < d) {
f <- 0
mat <- rbind(mat, vec)
}
}
mat[, 2] <- -mat[, 2]
plot(mat, pch = 16, cex = 0.5, asp = ncol(img) / nrow(img))
img <- imager::load.image("https://upload.wikimedia.org/wikipedia/commons/4/43/Immanuel_Kant_%28painted_portrait%29.jpg")
point <- function(a, b) {
runif(2, a, b)
}
distance <- function(a, b) {
sqrt(sum((a - b)^2))
}
value <- function(img, vec) {
mean(img[
ceiling(vec[1] * dim(img)[1]),
ceiling(vec[2] * dim(img)[2]),
1, 1:3
])
}
a <- 0
b <- 1
r <- 0.1
mat <- t(matrix(point(a, b)))
f <- 0
while (f < 100) {
vec <- point(a, b)
r <- 0.005 + value(img, vec)^1.2 / 10
d <- min(apply(mat, 1, distance, vec))
f <- f + 1
if (r < d) {
f <- 0
mat <- rbind(mat, vec)
}
}
mat[, 2] <- -mat[, 2]
plot(mat, pch = 16, cex = 0.5, asp = ncol(img) / nrow(img))
img <- imager::load.image("https://upload.wikimedia.org/wikipedia/commons/4/43/Immanuel_Kant_%28painted_portrait%29.jpg")
point <- function(a, b) {
runif(2, a, b)
}
distance <- function(a, b) {
sqrt(sum((a - b)^2))
}
value <- function(img, vec) {
mean(img[
ceiling(vec[1] * dim(img)[1]),
ceiling(vec[2] * dim(img)[2]),
1, 1:3
])
}
a <- 0
b <- 1
r <- 0.1
mat <- t(matrix(point(a, b)))
f <- 0
while (f < 100) {
vec <- point(a, b)
r <- 0.01 + value(img, vec)^1.2 / 10
d <- min(apply(mat, 1, distance, vec))
f <- f + 1
if (r < d) {
f <- 0
mat <- rbind(mat, vec)
}
}
mat[, 2] <- -mat[, 2]
plot(mat, pch = 16, cex = 0.5, asp = ncol(img) / nrow(img))
plot(mat, pch = 16, cex = 0.5, asp = ncol(img) / nrow(img), axes = FALSE)
par(mar = 0)
par(mar = c(0, 0, 0, 0))
plot(mat, pch = 16, cex = 0.5, asp = ncol(img) / nrow(img), axes = FALSE)
par(mar = c(0, 0, 0, 0))
plot(mat, pch = 16, cex = 0.5, asp = ncol(img) / nrow(img), axes = FALSE)
par(mar = c(0, 0, 0, 0) + 0.1)
plot(mat, pch = 16, cex = 0.5, asp = ncol(img) / nrow(img), axes = FALSE)
{
par(mar = c(0, 0, 0, 0) + 0.1)
plot(mat, pch = 16, cex = 0.5, asp = ncol(img) / nrow(img), axes = FALSE)
}
point <- function(a, b) {
runif(2, a, b)
}
distance <- function(a, b) {
sqrt(sum((a - b)^2))
}
value <- function(img, vec) {
mean(img[
ceiling(vec[1] * dim(img)[1]),
ceiling(vec[2] * dim(img)[2]),
1, 1:3
])
}
img <- imager::load.image("https://upload.wikimedia.org/wikipedia/commons/4/43/Immanuel_Kant_%28painted_portrait%29.jpg")
a <- 0
b <- 1
r <- 0.1
mat <- t(matrix(point(a, b)))
f <- 0
while (f < 100) {
vec <- point(a, b)
r <- 0.01 + value(img, vec)^1.2 / 10
d <- min(apply(mat, 1, distance, vec))
f <- f + 1
if (r < d) {
f <- 0
mat <- rbind(mat, vec)
}
}
mat[, 2] <- -mat[, 2]
{
par(mar = c(0, 0, 0, 0) + 0.1)
plot(mat, pch = 16, cex = 0.5, asp = ncol(img) / nrow(img), axes = FALSE)
}
r <- 0.01 + value(img, vec)^1.2 / 15
point <- function(a, b) {
runif(2, a, b)
}
distance <- function(a, b) {
sqrt(sum((a - b)^2))
}
value <- function(img, vec) {
mean(img[
ceiling(vec[1] * dim(img)[1]),
ceiling(vec[2] * dim(img)[2]),
1, 1:3
])
}
img <- imager::load.image("https://upload.wikimedia.org/wikipedia/commons/4/43/Immanuel_Kant_%28painted_portrait%29.jpg")
a <- 0
b <- 1
r <- 0.1
mat <- t(matrix(point(a, b)))
f <- 0
while (f < 100) {
vec <- point(a, b)
r <- 0.01 + value(img, vec)^1.2 / 15
d <- min(apply(mat, 1, distance, vec))
f <- f + 1
if (r < d) {
f <- 0
mat <- rbind(mat, vec)
}
}
mat[, 2] <- -mat[, 2]
{
par(mar = c(0, 0, 0, 0) + 0.1)
plot(mat, pch = 16, cex = 0.5, asp = ncol(img) / nrow(img), axes = FALSE)
}
source('C:/Users/Shane/Desktop/circle_packing.R', echo=TRUE)
{
par(mar = c(0, 0, 0, 0) + 0.1)
plot(mat, pch = 16, cex = 0.75, asp = ncol(img) / nrow(img), axes = FALSE)
}
plot(mat, pch = 16, cex = 0.7, asp = ncol(img) / nrow(img), axes = FALSE)
{
par(mar = c(0, 0, 0, 0) + 0.1)
plot(mat, pch = 16, cex = 0.7, asp = ncol(img) / nrow(img), axes = FALSE)
}
plot(mat, pch = 16, cex = 0.6, asp = ncol(img) / nrow(img), axes = FALSE)
source('C:/Users/Shane/Desktop/circle_packing.R', echo=TRUE)
# documentation
devtools::document()
devtools::build_readme()
devtools::build_vignettes()
set("/Users/Shane/Code/packaging/CytoTalk")
setwd("/Users/Shane/Code/packaging/CytoTalk")
# documentation
devtools::document()
devtools::build_readme()
devtools::build_vignettes()
# check code
devtools::check()
# check code
devtools::check()
# BiocCheck specific
BiocCheck::BiocCheck()
